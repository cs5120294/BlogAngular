{
  "blogs": [
    {
      "id": 1,
      "title": "Ashwin: quickest bowler to 300 wickets in Test history",
      "content": "In only his 54th match, R Ashwin became the quickest bowler to take 300 wickets in Test history. His 4 for 63 in the second innings in Nagpur not only helped India wrap up their biggest win in the format, and but also meant he took over from Dennis Lillee (56 Tests) as the new record holder. Ashwin also beat Muttiah Muralitharan, who had been the fastest spinner to 300 wickets, by as many as four Tests.",
      "category": "Sports",
      "author": 2
    },
    {
      "id": 2,
      "title": "Gabba Test shows why pitches must favour bowlers more",
      "content": "One of the big changes in Test cricket in the era of media saturation has been the amount of talking and predicting done by the competitors in the lead-up to a series. Never is this more evident than in an Ashes series, and one of the big talking points leading into the 2017-18 version was discussion surrounding the venue. The Gabbatoir, as it is now commonly referred to by locals in the hope that this will lead to the slaughtering of England, was the focal point of much of what really amounted to trash talking.",
      "category": "Sports",
      "author": 2
    },
    {
      "id": 379,
      "title": "Anular2",
      "content": "The less obvious but critical difference is that these two methods return very different results.\n\nThe promise-based then returns another promise. You can keep chaining more then and catch calls, getting a new promise each time.\nThe subscribe method returns a Subscription. A Subscription is not another Observable. It’s the end of the line for observables. You can’t call map on it or call subscribe again. The Subscription object has a different purpose, signified by its primary method, unsubscribe.",
      "category": "Education",
      "author": 1
    },
    {
      "id": 677,
      "title": "Observable vs Promises",
      "content": "The less obvious but critical difference is that these two methods return very different results.\n\nThe promise-based then returns another promise. You can keep chaining more then and catch calls, getting a new promise each time.\nThe subscribe method returns a Subscription. A Subscription is not another Observable. It’s the end of the line for observables. You can’t call map on it or call subscribe again. The Subscription object has a different purpose, signified by its primary method, unsubscribe.",
      "category": "Education",
      "author": 1
    },
    {
      "id": 391,
      "title": "Marketing1",
      "content": "The less obvious but critical difference is that these two methods return very different results.\n\nThe promise-based then returns another promise. You can keep chaining more then and catch calls, getting a new promise each time.\nThe subscribe method returns a Subscription. A Subscription is not another Observable. It’s the end of the line for observables. You can’t call map on it or call subscribe again. The Subscription object has a different purpose, signified by its primary method, unsubscribe.",
      "category": "Marketing",
      "author": 1
    },
    {
      "id": 239,
      "title": "other1",
      "content": "The less obvious but critical difference is that these two methods return very different results.\n\nThe promise-based then returns another promise. You can keep chaining more then and catch calls, getting a new promise each time.\nThe subscribe method returns a Subscription. A Subscription is not another Observable. It’s the end of the line for observables. You can’t call map on it or call subscribe again. The Subscription object has a different purpose, signified by its primary method, unsubscribe.",
      "category": "Other",
      "author": 1
    }
  ],
  "users": [
    {
      "id": 1,
      "name": "Prerit",
      "username": "user1",
      "password": "user1",
      "favouritePosts": [
        2,
        1,
        3
      ]
    },
    {
      "id": 2,
      "name": "Sachin",
      "username": "user2",
      "password": "user2",
      "favouritePosts": [
        2,
        3
      ]
    },
    {
      "id": 3,
      "name": "Ludo",
      "username": "aloo",
      "password": "qwert",
      "favouritePosts": []
    },
    {
      "id": 4,
      "name": "pkp",
      "username": "user5",
      "password": "123",
      "favouritePosts": []
    },
    {
      "id": 5,
      "name": "wreuwur",
      "username": "user11",
      "password": "12345",
      "favouritePosts": []
    },
    {
      "id": 6,
      "name": "dhsdhj",
      "username": "user12",
      "password": "12345",
      "favouritePosts": []
    },
    {
      "name": "pkp",
      "dob": "2012-01-01",
      "contact": 8802084372,
      "email": "kumarpkp50@gmail.com",
      "id": 8
    }
  ]
}